// Code generated by go-queryset. DO NOT EDIT.
package go_queryset

import (
	"errors"
	"fmt"
	"strings"
	"time"

	"gorm.io/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set ContactQuerySet

// ContactQuerySet is an queryset type for Contact
type ContactQuerySet struct {
	db *gorm.DB
}

// NewContactQuerySet constructs new ContactQuerySet
func NewContactQuerySet(db *gorm.DB) ContactQuerySet {
	return ContactQuerySet{
		db: db.Model(&Contact{}),
	}
}

func (qs ContactQuerySet) w(db *gorm.DB) ContactQuerySet {
	return NewContactQuerySet(db)
}

func (qs ContactQuerySet) With(callback func(db *gorm.DB) *gorm.DB) ContactQuerySet {
	return qs.w(callback(qs.db))
}

func (qs ContactQuerySet) Select(fields ...ContactDBSchemaField) ContactQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *Contact) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Contact) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) All(ret *[]*Contact) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) CreatedAtEq(createdAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) CreatedAtGt(createdAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) CreatedAtGte(createdAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) CreatedAtLt(createdAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) CreatedAtLte(createdAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) CreatedAtNe(createdAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) Delete() error {
	return qs.db.Delete(&Contact{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(&Contact{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(&Contact{})
	return db.RowsAffected, db.Error
}

// EmailEq is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailEq(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email = ?", email))
}

// EmailGt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailGt(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email > ?", email))
}

// EmailGte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailGte(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email >= ?", email))
}

// EmailIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailIn(email ...string) ContactQuerySet {
	if len(email) == 0 {
		qs.db.AddError(errors.New("must at least pass one email in EmailIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("email IN (?)", email))
}

// EmailLike is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailLike(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email LIKE ?", email))
}

// EmailLt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailLt(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email < ?", email))
}

// EmailLte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailLte(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email <= ?", email))
}

// EmailNe is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailNe(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email != ?", email))
}

// EmailNotIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailNotIn(email ...string) ContactQuerySet {
	if len(email) == 0 {
		qs.db.AddError(errors.New("must at least pass one email in EmailNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("email NOT IN (?)", email))
}

// EmailNotlike is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) EmailNotlike(email string) ContactQuerySet {
	return qs.w(qs.db.Where("email NOT LIKE ?", email))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) GetUpdater() ContactUpdater {
	return NewContactUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDEq(ID int64) ContactQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDGt(ID int64) ContactQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDGte(ID int64) ContactQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDIn(ID ...int64) ContactQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDLt(ID int64) ContactQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDLte(ID int64) ContactQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDNe(ID int64) ContactQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) IDNotIn(ID ...int64) ContactQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) Limit(limit int) ContactQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameEq(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameGt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameGt(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name > ?", name))
}

// NameGte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameGte(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name >= ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameIn(name ...string) ContactQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameLike is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameLike(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name LIKE ?", name))
}

// NameLt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameLt(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name < ?", name))
}

// NameLte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameLte(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name <= ?", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameNe(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameNotIn(name ...string) ContactQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// NameNotlike is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) NameNotlike(name string) ContactQuerySet {
	return qs.w(qs.db.Where("name NOT LIKE ?", name))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) Offset(offset int) ContactQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs ContactQuerySet) One(ret *Contact) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderAscByCreatedAt() ContactQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByEmail is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderAscByEmail() ContactQuerySet {
	return qs.w(qs.db.Order("email ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderAscByID() ContactQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByName is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderAscByName() ContactQuerySet {
	return qs.w(qs.db.Order("name ASC"))
}

// OrderAscByPhone is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderAscByPhone() ContactQuerySet {
	return qs.w(qs.db.Order("phone ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderAscByUpdatedAt() ContactQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderDescByCreatedAt() ContactQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByEmail is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderDescByEmail() ContactQuerySet {
	return qs.w(qs.db.Order("email DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderDescByID() ContactQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByName is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderDescByName() ContactQuerySet {
	return qs.w(qs.db.Order("name DESC"))
}

// OrderDescByPhone is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderDescByPhone() ContactQuerySet {
	return qs.w(qs.db.Order("phone DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) OrderDescByUpdatedAt() ContactQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PhoneEq is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneEq(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone = ?", phone))
}

// PhoneGt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneGt(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone > ?", phone))
}

// PhoneGte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneGte(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone >= ?", phone))
}

// PhoneIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneIn(phone ...string) ContactQuerySet {
	if len(phone) == 0 {
		qs.db.AddError(errors.New("must at least pass one phone in PhoneIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("phone IN (?)", phone))
}

// PhoneLike is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneLike(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone LIKE ?", phone))
}

// PhoneLt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneLt(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone < ?", phone))
}

// PhoneLte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneLte(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone <= ?", phone))
}

// PhoneNe is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneNe(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone != ?", phone))
}

// PhoneNotIn is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneNotIn(phone ...string) ContactQuerySet {
	if len(phone) == 0 {
		qs.db.AddError(errors.New("must at least pass one phone in PhoneNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("phone NOT IN (?)", phone))
}

// PhoneNotlike is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PhoneNotlike(phone string) ContactQuerySet {
	return qs.w(qs.db.Where("phone NOT LIKE ?", phone))
}

// PreloadDeletedAt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) PreloadDeletedAt() ContactQuerySet {
	return qs.w(qs.db.Preload("DeletedAt"))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) UpdatedAtEq(updatedAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) UpdatedAtGt(updatedAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) UpdatedAtGte(updatedAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) UpdatedAtLt(updatedAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) UpdatedAtLte(updatedAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ContactQuerySet) UpdatedAtNe(updatedAt time.Time) ContactQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// IncCreatedAt is an autogenerated method
// nolint: dupl
func (u ContactUpdater) IncCreatedAt(createdAt time.Time) ContactUpdater {
	u.fields[string(ContactDBSchema.CreatedAt)] = gorm.Expr(string(ContactDBSchema.CreatedAt)+" + ?", createdAt)
	return u
}

// IncID is an autogenerated method
// nolint: dupl
func (u ContactUpdater) IncID(ID int64) ContactUpdater {
	u.fields[string(ContactDBSchema.ID)] = gorm.Expr(string(ContactDBSchema.ID)+" + ?", ID)
	return u
}

// IncUpdatedAt is an autogenerated method
// nolint: dupl
func (u ContactUpdater) IncUpdatedAt(updatedAt time.Time) ContactUpdater {
	u.fields[string(ContactDBSchema.UpdatedAt)] = gorm.Expr(string(ContactDBSchema.UpdatedAt)+" + ?", updatedAt)
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u ContactUpdater) SetCreatedAt(createdAt time.Time) ContactUpdater {
	u.fields[string(ContactDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u ContactUpdater) SetDeletedAt(deletedAt gorm.DeletedAt) ContactUpdater {
	u.fields[string(ContactDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetEmail is an autogenerated method
// nolint: dupl
func (u ContactUpdater) SetEmail(email string) ContactUpdater {
	u.fields[string(ContactDBSchema.Email)] = email
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u ContactUpdater) SetID(ID int64) ContactUpdater {
	u.fields[string(ContactDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u ContactUpdater) SetName(name string) ContactUpdater {
	u.fields[string(ContactDBSchema.Name)] = name
	return u
}

// SetPhone is an autogenerated method
// nolint: dupl
func (u ContactUpdater) SetPhone(phone string) ContactUpdater {
	u.fields[string(ContactDBSchema.Phone)] = phone
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u ContactUpdater) SetUpdatedAt(updatedAt time.Time) ContactUpdater {
	u.fields[string(ContactDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u ContactUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u ContactUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// With is an autogenerated method
// nolint: dupl
func (u ContactUpdater) With(callback func(fields map[string]interface{}) map[string]interface{}) ContactUpdater {
	u.fields = callback(u.fields)
	return u
}

// ===== END of query set ContactQuerySet

// ===== BEGIN of Contact modifiers

// ContactDBSchemaField describes database schema field. It requires for method 'Update'
type ContactDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f ContactDBSchemaField) String() string {
	return string(f)
}

// ContactDBSchema stores db field names of Contact
var ContactDBSchema = struct {
	ID        ContactDBSchemaField
	CreatedAt ContactDBSchemaField
	UpdatedAt ContactDBSchemaField
	DeletedAt ContactDBSchemaField
	Name      ContactDBSchemaField
	Email     ContactDBSchemaField
	Phone     ContactDBSchemaField
	GetField  func(str string) ContactDBSchemaField
}{

	ID:        ContactDBSchemaField("id"),
	CreatedAt: ContactDBSchemaField("created_at"),
	UpdatedAt: ContactDBSchemaField("updated_at"),
	DeletedAt: ContactDBSchemaField("deleted_at"),
	Name:      ContactDBSchemaField("name"),
	Email:     ContactDBSchemaField("email"),
	Phone:     ContactDBSchemaField("phone"),
	GetField: func(str string) ContactDBSchemaField {
		if str == "" {
			return ""
		}

		if strings.ToLower(str) == strings.ToLower("id") {
			return ContactDBSchemaField("id")
		}
		if strings.ToLower(str) == strings.ToLower("created_at") {
			return ContactDBSchemaField("created_at")
		}
		if strings.ToLower(str) == strings.ToLower("updated_at") {
			return ContactDBSchemaField("updated_at")
		}
		if strings.ToLower(str) == strings.ToLower("deleted_at") {
			return ContactDBSchemaField("deleted_at")
		}
		if strings.ToLower(str) == strings.ToLower("name") {
			return ContactDBSchemaField("name")
		}
		if strings.ToLower(str) == strings.ToLower("email") {
			return ContactDBSchemaField("email")
		}
		if strings.ToLower(str) == strings.ToLower("phone") {
			return ContactDBSchemaField("phone")
		}
		return ""
	},
}

// Update updates Contact fields by primary key
// nolint: dupl
func (o *Contact) Update(db *gorm.DB, fields ...ContactDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"name":       o.Name,
		"email":      o.Email,
		"phone":      o.Phone,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Contact %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ContactUpdater is an Contact updates manager
type ContactUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewContactUpdater creates new Contact updater
// nolint: dupl
func NewContactUpdater(db *gorm.DB) ContactUpdater {
	return ContactUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Contact{}),
	}
}

// ===== END of Contact modifiers

// ===== END of all query sets
