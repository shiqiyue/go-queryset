// Code generated by go-queryset. DO NOT EDIT.
package go_queryset

import (
	"errors"
	"fmt"
	"strings"
	"time"

	"gorm.io/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set IdeaTagStatQuerySet

// IdeaTagStatQuerySet is an queryset type for IdeaTagStat
type IdeaTagStatQuerySet struct {
	db *gorm.DB
}

// NewIdeaTagStatQuerySet constructs new IdeaTagStatQuerySet
func NewIdeaTagStatQuerySet(db *gorm.DB) IdeaTagStatQuerySet {
	return IdeaTagStatQuerySet{
		db: db.Model(&IdeaTagStat{}),
	}
}

func (qs IdeaTagStatQuerySet) w(db *gorm.DB) IdeaTagStatQuerySet {
	return NewIdeaTagStatQuerySet(db)
}

func (qs IdeaTagStatQuerySet) With(callback func(db *gorm.DB) *gorm.DB) IdeaTagStatQuerySet {
	return qs.w(callback(qs.db))
}

func (qs IdeaTagStatQuerySet) Select(fields ...IdeaTagStatDBSchemaField) IdeaTagStatQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *IdeaTagStat) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *IdeaTagStat) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) All(ret *[]*IdeaTagStat) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) CreatedAtEq(createdAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) CreatedAtGt(createdAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) CreatedAtGte(createdAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) CreatedAtLt(createdAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) CreatedAtLte(createdAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) CreatedAtNe(createdAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) Delete() error {
	return qs.db.Delete(&IdeaTagStat{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(&IdeaTagStat{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(&IdeaTagStat{})
	return db.RowsAffected, db.Error
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) GetUpdater() IdeaTagStatUpdater {
	return NewIdeaTagStatUpdater(qs.db)
}

// IdEq is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdEq(id int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("id = ?", id))
}

// IdGt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdGt(id int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("id > ?", id))
}

// IdGte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdGte(id int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("id >= ?", id))
}

// IdIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdIn(id ...int64) IdeaTagStatQuerySet {
	if len(id) == 0 {
		qs.db.AddError(errors.New("must at least pass one id in IdIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", id))
}

// IdLt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdLt(id int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("id < ?", id))
}

// IdLte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdLte(id int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("id <= ?", id))
}

// IdNe is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdNe(id int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("id != ?", id))
}

// IdNotIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) IdNotIn(id ...int64) IdeaTagStatQuerySet {
	if len(id) == 0 {
		qs.db.AddError(errors.New("must at least pass one id in IdNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", id))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) Limit(limit int) IdeaTagStatQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) Offset(offset int) IdeaTagStatQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs IdeaTagStatQuerySet) One(ret *IdeaTagStat) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderAscByCreatedAt() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscById is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderAscById() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscBySearchCount is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderAscBySearchCount() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("search_count ASC"))
}

// OrderAscByTagId is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderAscByTagId() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("tag_id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderAscByUpdatedAt() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUseCount is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderAscByUseCount() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("use_count ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderDescByCreatedAt() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescById is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderDescById() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescBySearchCount is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderDescBySearchCount() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("search_count DESC"))
}

// OrderDescByTagId is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderDescByTagId() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("tag_id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderDescByUpdatedAt() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUseCount is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) OrderDescByUseCount() IdeaTagStatQuerySet {
	return qs.w(qs.db.Order("use_count DESC"))
}

// SearchCountEq is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountEq(searchCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("search_count = ?", searchCount))
}

// SearchCountGt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountGt(searchCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("search_count > ?", searchCount))
}

// SearchCountGte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountGte(searchCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("search_count >= ?", searchCount))
}

// SearchCountIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountIn(searchCount ...int64) IdeaTagStatQuerySet {
	if len(searchCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one searchCount in SearchCountIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("search_count IN (?)", searchCount))
}

// SearchCountLt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountLt(searchCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("search_count < ?", searchCount))
}

// SearchCountLte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountLte(searchCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("search_count <= ?", searchCount))
}

// SearchCountNe is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountNe(searchCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("search_count != ?", searchCount))
}

// SearchCountNotIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) SearchCountNotIn(searchCount ...int64) IdeaTagStatQuerySet {
	if len(searchCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one searchCount in SearchCountNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("search_count NOT IN (?)", searchCount))
}

// TagIdEq is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdEq(tagId int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("tag_id = ?", tagId))
}

// TagIdGt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdGt(tagId int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("tag_id > ?", tagId))
}

// TagIdGte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdGte(tagId int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("tag_id >= ?", tagId))
}

// TagIdIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdIn(tagId ...int64) IdeaTagStatQuerySet {
	if len(tagId) == 0 {
		qs.db.AddError(errors.New("must at least pass one tagId in TagIdIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("tag_id IN (?)", tagId))
}

// TagIdLt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdLt(tagId int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("tag_id < ?", tagId))
}

// TagIdLte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdLte(tagId int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("tag_id <= ?", tagId))
}

// TagIdNe is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdNe(tagId int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("tag_id != ?", tagId))
}

// TagIdNotIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) TagIdNotIn(tagId ...int64) IdeaTagStatQuerySet {
	if len(tagId) == 0 {
		qs.db.AddError(errors.New("must at least pass one tagId in TagIdNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("tag_id NOT IN (?)", tagId))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UpdatedAtEq(updatedAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UpdatedAtGt(updatedAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UpdatedAtGte(updatedAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UpdatedAtLt(updatedAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UpdatedAtLte(updatedAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UpdatedAtNe(updatedAt time.Time) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// UseCountEq is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountEq(useCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("use_count = ?", useCount))
}

// UseCountGt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountGt(useCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("use_count > ?", useCount))
}

// UseCountGte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountGte(useCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("use_count >= ?", useCount))
}

// UseCountIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountIn(useCount ...int64) IdeaTagStatQuerySet {
	if len(useCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one useCount in UseCountIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("use_count IN (?)", useCount))
}

// UseCountLt is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountLt(useCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("use_count < ?", useCount))
}

// UseCountLte is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountLte(useCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("use_count <= ?", useCount))
}

// UseCountNe is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountNe(useCount int64) IdeaTagStatQuerySet {
	return qs.w(qs.db.Where("use_count != ?", useCount))
}

// UseCountNotIn is an autogenerated method
// nolint: dupl
func (qs IdeaTagStatQuerySet) UseCountNotIn(useCount ...int64) IdeaTagStatQuerySet {
	if len(useCount) == 0 {
		qs.db.AddError(errors.New("must at least pass one useCount in UseCountNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("use_count NOT IN (?)", useCount))
}

// IncCreatedAt is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) IncCreatedAt(createdAt time.Time) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.CreatedAt)] = gorm.Expr(string(IdeaTagStatDBSchema.CreatedAt)+" + ?", createdAt)
	return u
}

// IncId is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) IncId(id int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.Id)] = gorm.Expr(string(IdeaTagStatDBSchema.Id)+" + ?", id)
	return u
}

// IncSearchCount is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) IncSearchCount(searchCount int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.SearchCount)] = gorm.Expr(string(IdeaTagStatDBSchema.SearchCount)+" + ?", searchCount)
	return u
}

// IncTagId is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) IncTagId(tagId int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.TagId)] = gorm.Expr(string(IdeaTagStatDBSchema.TagId)+" + ?", tagId)
	return u
}

// IncUpdatedAt is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) IncUpdatedAt(updatedAt time.Time) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.UpdatedAt)] = gorm.Expr(string(IdeaTagStatDBSchema.UpdatedAt)+" + ?", updatedAt)
	return u
}

// IncUseCount is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) IncUseCount(useCount int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.UseCount)] = gorm.Expr(string(IdeaTagStatDBSchema.UseCount)+" + ?", useCount)
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) SetCreatedAt(createdAt time.Time) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.CreatedAt)] = createdAt
	return u
}

// SetId is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) SetId(id int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.Id)] = id
	return u
}

// SetSearchCount is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) SetSearchCount(searchCount int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.SearchCount)] = searchCount
	return u
}

// SetTagId is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) SetTagId(tagId int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.TagId)] = tagId
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) SetUpdatedAt(updatedAt time.Time) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUseCount is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) SetUseCount(useCount int64) IdeaTagStatUpdater {
	u.fields[string(IdeaTagStatDBSchema.UseCount)] = useCount
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u IdeaTagStatUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set IdeaTagStatQuerySet

// ===== BEGIN of IdeaTagStat modifiers

// IdeaTagStatDBSchemaField describes database schema field. It requires for method 'Update'
type IdeaTagStatDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f IdeaTagStatDBSchemaField) String() string {
	return string(f)
}

// IdeaTagStatDBSchema stores db field names of IdeaTagStat
var IdeaTagStatDBSchema = struct {
	Id          IdeaTagStatDBSchemaField
	CreatedAt   IdeaTagStatDBSchemaField
	UpdatedAt   IdeaTagStatDBSchemaField
	TagId       IdeaTagStatDBSchemaField
	UseCount    IdeaTagStatDBSchemaField
	SearchCount IdeaTagStatDBSchemaField
}{

	Id:          IdeaTagStatDBSchemaField("id"),
	CreatedAt:   IdeaTagStatDBSchemaField("created_at"),
	UpdatedAt:   IdeaTagStatDBSchemaField("updated_at"),
	TagId:       IdeaTagStatDBSchemaField("tag_id"),
	UseCount:    IdeaTagStatDBSchemaField("use_count"),
	SearchCount: IdeaTagStatDBSchemaField("search_count"),
}

// Update updates IdeaTagStat fields by primary key
// nolint: dupl
func (o *IdeaTagStat) Update(db *gorm.DB, fields ...IdeaTagStatDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.Id,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"tag_id":       o.TagId,
		"use_count":    o.UseCount,
		"search_count": o.SearchCount,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update IdeaTagStat %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// IdeaTagStatUpdater is an IdeaTagStat updates manager
type IdeaTagStatUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewIdeaTagStatUpdater creates new IdeaTagStat updater
// nolint: dupl
func NewIdeaTagStatUpdater(db *gorm.DB) IdeaTagStatUpdater {
	return IdeaTagStatUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&IdeaTagStat{}),
	}
}

// ===== END of IdeaTagStat modifiers

// ===== END of all query sets
